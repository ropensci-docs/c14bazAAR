[{"path":"https://docs.ropensci.org/c14bazAAR/CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing","title":"Contributing","text":"love pull requests everyone. participating project, agree abide code conduct.","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/CONTRIBUTING.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"Contributing","text":"Make sure GitHub account. familar git GitHub, take look http://happygitwithr.com/ get started. Submit post issue, assuming one already exist. Clearly describe issue, including steps reproduce bug, justification proposed improvement. Fork repository GitHub make copy repository account. use line shell terminal: git clone git@github.com:-username/c14bazAAR.git","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/CONTRIBUTING.html","id":"making-changes","dir":"","previous_headings":"","what":"Making changes","title":"Contributing","text":"Edit files, save often, make commits logical units, commit indicates one concept Follow good style guide. Make sure write good commit messages. Make sure added necessary tests code changes. Run tests using devtools::check() assure nothing else accidentally broken. need help unsure anything, post update issue.","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/CONTRIBUTING.html","id":"submitting-your-changes","dir":"","previous_headings":"","what":"Submitting your changes","title":"Contributing","text":"Push fork submit pull request. point ’re waiting us. like least comment pull requests within days. may suggest changes improvements alternatives.","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/articles/simple_plotting.html","id":"temporal-plotting-of-radiocarbon-ages","dir":"Articles","previous_headings":"","what":"Temporal plotting of radiocarbon ages","title":"Simple plotting options for radiocarbon dates in c14_date_lists","text":"Radiocarbon dating method determine absolute age samples. Therefore one main aims plotting naturally display temporal information. Let’s select dates one individual site – Batalimo Central Africa – subset reproduce two common types radiocarbon date plots. age modelling date plotting local regional scale major aim analysis, might want take look oxcAAR package. serves R interface OxCal provides powerful default plotting methods","code":"Batalimo <- adrac %>%   dplyr::filter(site == \"Batalimo\")"},{"path":"https://docs.ropensci.org/c14bazAAR/articles/simple_plotting.html","id":"ridgeplots-of-density-distributions","dir":"Articles","previous_headings":"Temporal plotting of radiocarbon ages","what":"Ridgeplots of density distributions","title":"Simple plotting options for radiocarbon dates in c14_date_lists","text":"One way plot radiocarbon ages show probability density distribution individual calibrated dates ridgeplots. produce plot like , first need age-probability information date. can calculate function c14bazAAR::calibrate(). adds list column calprobdistr input c14_date_list. list column contains nested data.frame date probability distribution. tidyr::unnest() list column can dissolved (“unnested”) integrated initial c14_date_list. course latter looses original structure meaning step. row now represents probability one date year. table like can used plotting ridgeplot.","code":"Batalimo_calibrated <- Batalimo %>%   calibrate(choices = \"calprobdistr\") ##  Radiocarbon date list ##  dates: 7 ##  sites: 1 ##  countries: 1 ##  uncalBP: 2000 ― 200  ##  ## # A data frame: 7 × 17 ##   sourcedb sourcedb_version method labnr c14age c14std calprobdistr c13val site  ##   <chr>    <date>           <chr>  <chr>  <int>  <int> <list>        <dbl> <chr> ## 1 adrac    2024-03-16       NA     Bdy-…   1890    130 <df>             NA Bata… ## 2 adrac    2024-03-16       NA     Bdy-…   1730    120 <df>             NA Bata… ## 3 adrac    2024-03-16       NA     Bdy-…   1990    210 <df>             NA Bata… ## 4 adrac    2024-03-16       NA     Bdy-…    240     75 <df>             NA Bata… ## 5 adrac    2024-03-16       NA     Bdy-…   1270    125 <df>             NA Bata… ## 6 adrac    2024-03-16       NA     Bdy-…   1798    101 <df>             NA Bata… ## 7 adrac    2024-03-16       NA     Gif-…   1590     90 <df>             NA Bata… ## # ℹ 8 more variables: feature <chr>, period <chr>, material <chr>, ## #   country <chr>, lat <dbl>, lon <dbl>, shortref <chr>, comment <chr> Batalimo_cal_dens <- Batalimo_calibrated %>% tidyr::unnest(cols = c(\"calprobdistr\")) Batalimo_cal_dens %>%   ggplot() +   # a special geom for ridgeplots is provided by the ggridges package   ggridges::geom_ridgeline(     # the relevant variables that have to be mapped for this geom are      # x (the time -- here the calibrated age transformed to calBC),      # y (the individual lab number of the dates) and     # height (the probability for each year and date)      aes(x = -calage + 1950, y = labnr, height = density),     # ridgeplots lack a scientifically clear y axis for each      # distribution plot and we can adjust the scaling to our needs     scale = 300   ) +   xlab(\"age calBC/calAD\") +   ylab(\"dates\")"},{"path":"https://docs.ropensci.org/c14bazAAR/articles/simple_plotting.html","id":"calcurve-plot","dir":"Articles","previous_headings":"Temporal plotting of radiocarbon ages","what":"Calcurve plot","title":"Simple plotting options for radiocarbon dates in c14_date_lists","text":"Another way plot radiocarbon dates project onto calibration curve. Bchron R package contains data.frame intcal13 calibration curve data. can load intcal13 table directly Bchron. kind plot convenient work simplified calrange output c14bazAAR::calibrate(). Like calprobdistr option also adds list column input c14_date_list, much smaller one. date age ranges make 2-sigma significance interval probability distribution stored. resulting table can also unnested make list column content available main table. Now can plot calibration curve – top – error bars calrange sequences.","code":"load(system.file('data/intcal13.rda', package = 'Bchron')) Batalimo_calibrated <- Batalimo %>%   calibrate(choices = \"calrange\") Batalimo_calibrated$calrange[1:3] ## [[1]] ##   dens from   to ## 1 91.9 1521 2148 ## 2  3.3 2275 2287 ##  ## [[2]] ##   dens from   to ## 1 93.7 1363 1889 ## 2  1.5 1913 1917 ##  ## [[3]] ##   dens from   to ## 1 94.1 1407 2430 ## 2  1.2 2453 2460 Batalimo_cal_range <- Batalimo_calibrated %>% tidyr::unnest(cols = c(\"calrange\")) ggplot() +   # line plot of the intcal curve   geom_line(     data = intcal13,     # again we transform the age information from BP to BC     mapping = aes(x = -V1 + 1950, y = -V2 + 1950)   ) +   # the errorbars are plotted on top of the curve   geom_errorbarh(     data = Batalimo_cal_range,     mapping = aes(y = -c14age + 1950, xmin = -to + 1950, xmax = -from + 1950)   ) +   # we define the age range manually -- typically the calcurve   # is arranged to go from the top left to the bottom right corner   xlim(-1000, 2000) +   ylim(2000, -1000) +   xlab(\"age calBC/calAD\") +   ylab(\"uncalibrated age BC/AD\")"},{"path":"https://docs.ropensci.org/c14bazAAR/articles/simple_plotting.html","id":"spatial-mapping-of-radiocarbon-dates","dir":"Articles","previous_headings":"","what":"Spatial mapping of radiocarbon dates","title":"Simple plotting options for radiocarbon dates in c14_date_lists","text":"radiocarbon dates can accessed c14bazAAR coordinate information respective sites samples taken. Spatial maps therefore important form data visualization well. c14_date_lists can directly transformed objects class sf. sf objects introduced R package sf provides tidy interface work spatial data R. tabular data structure contains spatial point information date column geom, also initial columns input dataset: data.* can manipulated powerful dplyr functions. filter dates one particular publication (Moga 2008), group dates site apply summarise command keep one value per group. define operation fold variables input table, removed. geometry column remains.","code":"adrac_sf <- adrac %>% as.sf() ## Warning in remove_dates_without_coordinates(., quiet): Dates without ## coordinates were removed. ## Simple feature collection with 2178 features and 3 fields ## Geometry type: POINT ## Dimension:     XY ## Bounding box:  xmin: 8.717 ymin: -16.75 xmax: 30.683 ymax: 12.2 ## Geodetic CRS:  WGS 84 ## First 10 features: ##    data.labnr data.c14age data.c14std                 geom ## 1    AA-33171       13800         100 POINT (10.078 1.727) ## 2    AA-33172        6665          90 POINT (10.078 1.727) ## 3    AA-33225       10015          55    POINT (28.6 2.17) ## 4    AA-33226        6025          70    POINT (28.6 2.17) ## 5    AA-36757        4254          49 POINT (10.078 1.727) ## 6    AA-36758       10450          93 POINT (10.078 1.727) ## 7    AA-36792        5810         290 POINT (10.078 1.727) ## 8    AA-36793       30300        1300 POINT (10.078 1.727) ## 9    AA-78447        2362          39 POINT (16.924 3.989) ## 10   AA-78448        2171          37 POINT (16.924 3.989) Moga_spatial <- adrac_sf %>%   dplyr::filter(grepl(\"Moga 2008\", data.shortref)) %>%   dplyr::group_by(data.site) %>%   dplyr::summarise(.groups = \"drop\")"},{"path":"https://docs.ropensci.org/c14bazAAR/articles/simple_plotting.html","id":"interactive-map-view","dir":"Articles","previous_headings":"Spatial mapping of radiocarbon dates","what":"Interactive map view","title":"Simple plotting options for radiocarbon dates in c14_date_lists","text":"resulting sf object can plotted interactively mapview package.","code":"# Moga_spatial %>% mapview::mapview()"},{"path":"https://docs.ropensci.org/c14bazAAR/articles/simple_plotting.html","id":"static-map-plot","dir":"Articles","previous_headings":"Spatial mapping of radiocarbon dates","what":"Static map plot","title":"Simple plotting options for radiocarbon dates in c14_date_lists","text":"sf object can also used static plot – useful publications. download simple country border base map vector data rnaturalearth R package transform sf well. Now can combine base layer point data create prototype static map plot.  Please feel free open issue questions plotting radiocarbon dates.","code":"countries <- rnaturalearth::ne_countries() %>% sf::st_as_sf() ggplot() +   # geom_sf is a special geom to handle spatial data in the sf format   geom_sf(data = countries) +   # the explicit mapping of variables is not necessary here, as geom_sf    # automatically finds the *geom* column in the input table   geom_sf_text(data = countries, mapping = aes(label = formal_en), size = 2) +   geom_sf(data = Moga_spatial) +   # with geom_sf comes coord_sf to manage the underlying coordinate grid   coord_sf(xlim = c(10, 30), ylim = c(0, 15))"},{"path":"https://docs.ropensci.org/c14bazAAR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Clemens Schmid. Author, maintainer, copyright holder. Dirk Seidensticker. Author. Daniel Knitter. Author. Martin Hinz. Author. David Matzig. Author. Wolfgang Hamer. Author. Kay Schmuetz. Author. Thomas Huet. Contributor. Nils Mueller-Scheessel. Contributor. Joe Roe. Contributor. Ben Marwick. Reviewer. Enrico R. Crema. Reviewer.","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schmid et al., (2019). c14bazAAR: R package downloading preparing C14 dates different source databases. Journal Open Source Software, 4(43), 1914, https://doi.org/10.21105/joss.01914","code":"@Article{,   title = {{c14bazAAR}: An {R} package for downloading and preparing {C14} dates from different source databases},   author = {Clemens Schmid and Dirk Seidensticker and Martin Hinz},   journal = {Journal of Open Source Software},   volume = {4},   number = {43},   pages = {1914},   month = {nov},   year = {2019},   doi = {10.21105/joss.01914},   url = {https://doi.org/10.21105/joss.01914}, }"},{"path":"https://docs.ropensci.org/c14bazAAR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Download and Prepare C14 Dates from Different Source Databases","text":"recommend install stable version R-universe repository rOpenSci following command (R console): development version can installed github following command (R console): versions --date include databases features. Installing development version Windows requires toolchain bundle Rtools. package needs lot packages – many necessary specific tasks. Functions require certain packages don’t installed yet stop ask enable . Please install.packages() download install respective packages CRAN.","code":"install.packages(\"c14bazAAR\", repos = c(ropensci = \"https://ropensci.r-universe.dev\")) if(!require('remotes')) install.packages('remotes') remotes::install_github(\"ropensci/c14bazAAR\")"},{"path":"https://docs.ropensci.org/c14bazAAR/index.html","id":"how-to-use","dir":"","previous_headings":"","what":"How to use","title":"Download and Prepare C14 Dates from Different Source Databases","text":"package contains set getter functions (see ) query databases. Thereby every available variable every archive downloaded. Instead c14bazAAR focuses selection important common variables achieve certain degree standardization. downloaded dates stored custom S3 class c14_date_list acts wrapper around tibble class provides specific class methods. workflow download prepare dates look like : takes quite time run ’s probably necessary use case. ’s list main tasks c14bazAAR can handle. allows pick need:","code":"library(c14bazAAR) library(magrittr)  get_c14data(\"all\") %>%   remove_duplicates() %>%   calibrate() %>%   determine_country_by_coordinate()"},{"path":"https://docs.ropensci.org/c14bazAAR/index.html","id":"download","dir":"","previous_headings":"How to use","what":"Download","title":"Download and Prepare C14 Dates from Different Source Databases","text":"c14bazAAR contains growing selection getter functions download radiocarbon date databases. ’s list available databases. can download dates get_c14data(\"\"). getters download data, adjust variable selection according defined variable key transform resulting list c14_date_list. See ?get_c14data information.","code":"x <- get_c14data(\"all\")"},{"path":"https://docs.ropensci.org/c14bazAAR/index.html","id":"calibration","dir":"","previous_headings":"How to use","what":"Calibration","title":"Download and Prepare C14 Dates from Different Source Databases","text":"calibrate() function calibrates valid dates c14_date_list individually Bchron::BchronCalibrate(). provides two different types output: calprobdistr calrange. See ?calibrate information.","code":"x %>% calibrate()"},{"path":"https://docs.ropensci.org/c14bazAAR/index.html","id":"country-attribution","dir":"","previous_headings":"How to use","what":"Country attribution","title":"Download and Prepare C14 Dates from Different Source Databases","text":"Filtering 14C dates country useful spatial filtering. databases provide variable country, don’t rely unified naming convention therefore use various terms represent entity. function determine_country_by_coordinate() determines country date coming intersecting spatial coordinates polygons rworldxtra::countriesHigh. See ?country_attribution information.","code":"x %>% determine_country_by_coordinate()"},{"path":"https://docs.ropensci.org/c14bazAAR/index.html","id":"duplicates","dir":"","previous_headings":"How to use","what":"Duplicates","title":"Download and Prepare C14 Dates from Different Source Databases","text":"source databases already contain duplicated dates sure ’ll combine different databases. result long history archives, includes even mutual absorption, duplicates make significant proportion combined datasets. ’s trivial find deal theses duplicates, exactly identical databases: Sometimes linked conflicting mutually exclusive context information. automatic search removal based identical lab numbers wrote remove_duplicates(). functions offers several options exactly duplicates treated. call remove_duplicates() option mark_only = TRUE data removed, can inspect duplicate groups identified. See ?duplicates information.","code":"x %>% remove_duplicates()"},{"path":"https://docs.ropensci.org/c14bazAAR/index.html","id":"conversion","dir":"","previous_headings":"How to use","what":"Conversion","title":"Download and Prepare C14 Dates from Different Source Databases","text":"c14_date_list can directly converted R data structures. far .sf() implemented. sf package provides great tools manipulate plot spatial vector data. simplifies certain spatial operations date point cloud. See ?.sf information.","code":"x %>% as.sf()"},{"path":"https://docs.ropensci.org/c14bazAAR/index.html","id":"technical-functions","dir":"","previous_headings":"How to use","what":"Technical functions","title":"Download and Prepare C14 Dates from Different Source Databases","text":"c14_date_lists constructed .c14_date_list. function takes data.frames tibbles adds c14_date_list class tag. also calls order_variables() establish certain variable order enforce_types() converts variables correct data type. custom print(), format() plot() methods c14_date_lists. fuse() function allows rowbind multiple c14_date_lists. See ?.c14_date_list ?fuse.","code":"x1 <- data.frame(   c14age = 2000,   c14std = 30 ) %>% as.c14_date_list()  x2 <- fuse(x1, x1)"},{"path":"https://docs.ropensci.org/c14bazAAR/index.html","id":"plotting-radiocarbon-data","dir":"","previous_headings":"How to use","what":"Plotting radiocarbon data","title":"Download and Prepare C14 Dates from Different Source Databases","text":"c14bazAAR provides basic plot function c14_date_lists. simple plotting vignette introduces techniques help get started sophisticated visualization.","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/index.html","id":"other-radiocarbon-packages","dir":"","previous_headings":"How to use","what":"Other radiocarbon packages","title":"Download and Prepare C14 Dates from Different Source Databases","text":"several R packages provide functions calibrate, analyze model radiocarbon dates: e.g. oxcAAR, rcarbon, Bchron usually simple, vector based interface can use c14_date_list columns input.","code":"rcarbon::calibrate(x = x$c14age, error = x$c14std)"},{"path":"https://docs.ropensci.org/c14bazAAR/index.html","id":"databases","dir":"","previous_headings":"","what":"Databases","title":"Download and Prepare C14 Dates from Different Source Databases","text":"suggest archives queried can join discussion .","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/index.html","id":"deprecated-databases","dir":"","previous_headings":"Databases","what":"Deprecated databases","title":"Download and Prepare C14 Dates from Different Source Databases","text":"databases removed c14bazAAR, openly online available : context: Collection radiocarbon dates sites Near East neighboring regions (20.000 - 5.000 calBC) Utz Böhner Daniel Schyle.","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Download and Prepare C14 Dates from Different Source Databases","text":"like contribute project, please start reading Guide Contributing. Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/index.html","id":"adding-database-getter-functions","dir":"","previous_headings":"Contributing","what":"Adding database getter functions","title":"Download and Prepare C14 Dates from Different Source Databases","text":"want add another radiocarbon database c14bazAAR (maybe list ) can follow checklist apply necessary changes package: Add database variable_reference table map database variables variables c14bazAAR databases. Write getter function get_[Database Name] script file: get_[database name].R. script file names used lowercase version database name. getter functions standardized layout always yield object class c14_date_list. Please look available functions get idea supposed look like checks include. Make sure store data outside tempdir(). databases include non-radiocarbon dates: Make sure filter – c14bazAAR far works radiocarbon dates. Add following roxygen2 tags function definition include package documentation. Update package documentation roxygen2. Add database url(s) db_info table make get_db_url(\"[database name]\") work. Run data-raw/data_prep.R script update data objects package. enables changes made step 5. test changes now running respective getter function. Add getter function wrote 2 functions vector get_all_parser_functions(). Document addition new function NEWS.md file. Add new database list Currently available databases DESCRIPTION file. Add function database list README file . Update README map figure running script README_map_figure.R.","code":"#' @rdname db_getter_backend #' @export"},{"path":"https://docs.ropensci.org/c14bazAAR/index.html","id":"pre-submission-testing","dir":"","previous_headings":"Contributing","what":"Pre-submission testing","title":"Download and Prepare C14 Dates from Different Source Databases","text":"submitting patches new getter functions via pull request, ask check following items: package works functions usable package documentation --date represents functions correctly test coverage package functions sufficient DESCRIPTION --date latest version number database list README.md --date NEWS.md --date includes latest changes Package checks ran yield ERRORS, WARNINGS NOTES Spellcheck devtools::spell_check() ran yield false-positives codemeta.json --date (can updated codemetar::write_codemeta()) inst/CITATION --date package make external changes without explicit user permission. write file system, change options, install packages, quit R, send information internet, open external software, etc. reverse dependencies break new package version (devtools::revdep_check())","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/index.html","id":"versioning","dir":"","previous_headings":"Contributing","what":"Versioning","title":"Download and Prepare C14 Dates from Different Source Databases","text":"Version numbers (releases) follow semantic versioning schema consist mayor minor releases well patches. x.y.z: mayor release made existing function radically changed removed thus package API changed. x.y.z: minor release contains new parsers auxiliary functions. x.y.z: patch updates existing parsers functions.","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Download and Prepare C14 Dates from Different Source Databases","text":"Schmid et al., (2019). c14bazAAR: R package downloading preparing C14 dates different source databases. Journal Open Source Software, 4(43), 1914, https://doi.org/10.21105/joss.01914","code":"@Article{Schmid2019,   title = {{c14bazAAR}: An {R} package for downloading and preparing {C14} dates from different source databases},   author = {Clemens Schmid and Dirk Seidensticker and Martin Hinz},   journal = {Journal of Open Source Software},   volume = {4},   number = {43},   pages = {1914},   month = {nov},   year = {2019},   doi = {10.21105/joss.01914},   url = {https://doi.org/10.21105/joss.01914}, }"},{"path":"https://docs.ropensci.org/c14bazAAR/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Download and Prepare C14 Dates from Different Source Databases","text":"code project apply terms conditions GNU GENERAL PUBLIC LICENSE Version 2. source databases published different licenses.","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/paper.html","id":null,"dir":"","previous_headings":"","what":"Background","title":"Background","text":"Radiocarbon dating one important methods absolute relative chronological reconstruction cultural development prehistoric archaeology [@Taylor:2016]. true intrasite level, regional comparisons also cases, processes large spatial temporal reach investigated. Prominent examples latter include ‘neolithization’ Europe ‘Bantu expansion’ sub-Saharan Africa. extensively analysed radiocarbon data (e.g. @Ammerman:1971, @Garcin:2018, @Jerardino:2014, @Lemmen:2011, @Oslisly:2013, @Pinhasi:2005, @Russell:2014, @Weninger:2009). Data selection models complex requires thorough understanding archaeological questions. time sufficient include every date vaguely fits context. dates deliberately omitted. order make important process data filtering transparent reproducible possible, criteria selection especially original data set must generally accessible well contextualized. Otherwise, peers can evaluate results meaningful way. Fortunately, many archaeological institutions individual authors sharing radiocarbon collections online (e.g. @Hinz:2012, @Kneisel:2013, @Mustaphi:2016, @Seidensticker:2016) – archives long tradition quality control maintenance. Also, boom Open Data movement recent years led increase publications raw data archaeology (e.g. @Palmisano:2017). collections important archive future research questions. However, entire data basis currently highly decentralized lacks basic standardisation. results effective loss possible added value result intersection data sets terms searchability, error checking analysis. creation world-wide centralised database radiocarbon dates solve issues expected near future.","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/paper.html","id":"code-summary","dir":"","previous_headings":"","what":"Code Summary","title":"Background","text":"c14bazAAR R package attempts tackle problem hand providing independent interface access radiocarbon data make available reproducible research process: modelling publication scientific discourse. queries openly available 14C data archives, behind pay- login-walls. package includes download functions (accessible main interface c14bazAAR::get_c14data()) – first – acquire databases different sources online. reduce tables set common variables store dedicated R S3 class: c14_date_list. c14_date_list based tibble::tibble integrate well R tidyverse ecosystem. also establishes standardised data types important variables usually defined describe radiocarbon data. Beyond download functions, c14bazAAR contains multitude useful helpers can applied objects class c14_date_list. include methods bulk calibration radiocarbon dates Bchron R package [@Haslett:2008], removal duplicates, estimation coordinate precision, conversion useful R data types (e.g. sf::sf [@Pebesma:2018]). classification sample material c14bazAAR provides manually curated reference list maps inconsistent attributions source databases standardized set material classes. reference list exists well fix country attribution value dates – especially important case missing coordinate information. Methods determine source country based coordinates fail dates. c14bazAAR already used data acquisition preparation least one research paper: @Schmid:2019.","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/paper.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Background","text":"package got valuable code input several members ISAAKiel group (Initiative Statistical Analysis Archaeology Kiel), notably: Daniel Knitter, David Matzig, Wolfgang Hamer, Kay Schmütz Nils Müller-Scheeßel.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/c14bazAAR/reference/as.sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a c14_date_list to a sf object — as.sf","title":"Convert a c14_date_list to a sf object — as.sf","text":"14C dates point position information coordinates columns lat lon. allows converted spatial simple feature collection provided sf package. simplifies example mapping dates.","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/as.sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a c14_date_list to a sf object — as.sf","text":"","code":"as.sf(x, quiet = FALSE)  # S3 method for default as.sf(x, quiet = FALSE)  # S3 method for c14_date_list as.sf(x, quiet = FALSE)"},{"path":"https://docs.ropensci.org/c14bazAAR/reference/as.sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a c14_date_list to a sf object — as.sf","text":"x object class c14_date_list quiet suppress warning removal dates without coordinates","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/as.sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a c14_date_list to a sf object — as.sf","text":"object class sf","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/as.sf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a c14_date_list to a sf object — as.sf","text":"","code":"sf_c14 <- as.sf(example_c14_date_list) #> Warning: Dates without coordinates were removed.  if (FALSE) { library(mapview) mapview(sf_c14$geom) }"},{"path":"https://docs.ropensci.org/c14bazAAR/reference/c14_date_list.html","id":null,"dir":"Reference","previous_headings":"","what":"c14_date_list — c14_date_list","title":"c14_date_list — c14_date_list","text":"c14_date_list central data structure c14bazAAR package. tibble set custom methods variables. Please see variable_reference table description variables. available variables ignored.  object class data.frame tibble (tbl & tbl_df), can converted object class c14_date_list. requirement contains essential columns c14age c14std. function adds string \"c14_date_list\" classes vector object applies order_variables(), enforce_types() helper function clean_latlon() .","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/c14_date_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"c14_date_list — c14_date_list","text":"","code":"as.c14_date_list(x, ...)  is.c14_date_list(x, ...)  # S3 method for c14_date_list format(x, ...)  # S3 method for c14_date_list print(x, ...)  # S3 method for c14_date_list plot(x, ...)"},{"path":"https://docs.ropensci.org/c14bazAAR/reference/c14_date_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"c14_date_list — c14_date_list","text":"x object ... arguments passed methods","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/c14_date_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"c14_date_list — c14_date_list","text":"","code":"as.c14_date_list(data.frame(c14age = c(2000, 2500), c14std = c(30, 35))) #> \tRadiocarbon date list #> \tdates: 2 #> \tuncalBP: 2500 ― 2000  #>  #> # A data frame: 2 × 2 #>   c14age c14std #>    <int>  <int> #> 1   2000     30 #> 2   2500     35 is.c14_date_list(5) # FALSE #> [1] FALSE is.c14_date_list(example_c14_date_list) # TRUE #> [1] TRUE  print(example_c14_date_list) #> \tRadiocarbon date list #> \tdates: 9 #> \tsites: 4 #> \tcountries: 5 #> \tuncalBP: 9000 ― 1000  #>  #> # A data frame: 9 × 19 #>   sourcedb method labnr c14age c14std c13val site   sitetype     feature period  #>   <chr>    <chr>  <chr>  <int>  <int>  <dbl> <chr>  <chr>        <chr>   <chr>   #> 1 A        Conv   lab-1   1000     20    -15 Site A Burial mound Grave 1 NA      #> 2 A        Conv   lab-2   2000     30    -20 Site A NA           Grave 2 Bronze… #> 3 A        AMS    lab-3   3000     40    -25 Site B settlement   NA      Bronze… #> 4 B        NA     lab-4   4000     50    -15 Site B settlement   House 5 Late N… #> 5 B        AMS    lab-5   5000     50    -20 Site C settlement   NA      NA      #> 6 B        AMS    lab-6   6000     60    -25 Site C settlement   Oven 4  Early … #> 7 C        AMS    lab-7   7000     70    -15 Site D Camp         Hut 2   Mesoli… #> 8 C        AMS    lab-8   8000     80    -20 Site D Camp         Hut 2   Mesoli… #> 9 C        AMS    lab-9   9000     90    -25 Site D Camp         Hut 3   Mesoli… #> # ℹ 9 more variables: culture <chr>, material <chr>, species <chr>, #> #   region <chr>, country <chr>, lat <dbl>, lon <dbl>, shortref <chr>, #> #   comment <chr> plot(example_c14_date_list)"},{"path":"https://docs.ropensci.org/c14bazAAR/reference/c14bazAAR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"c14bazAAR: Download and Prepare C14 Dates from Different Source Databases — c14bazAAR-package","title":"c14bazAAR: Download and Prepare C14 Dates from Different Source Databases — c14bazAAR-package","text":"Query different C14 date databases apply basic data cleaning, merging calibration steps. Currently available databases: 14cpalaeolithic, 14sea, adrac, agrichange, aida, austarch, bda, calpal, caribbean, eubar, euroevol, irdd, jomon, katsianis, kiteeastafrica, medafricarbon, mesorad, neonet, neonetatl, nerd, p3k14c, pacea, palmisano, radon, radonb, rxpand, sard.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/c14bazAAR/reference/c14bazAAR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"c14bazAAR: Download and Prepare C14 Dates from Different Source Databases — c14bazAAR-package","text":"Maintainer: Clemens Schmid clemens@nevrome.de (ORCID) [copyright holder] Authors: Dirk Seidensticker dirk.seidensticker@gmail.com (ORCID) Daniel Knitter knitter@geographie.uni-kiel.de (ORCID) Martin Hinz martin.hinz@iaw.unibe.ch (ORCID) David Matzig matzigdavid@gmail.com (ORCID) Wolfgang Hamer hamer@geographie.uni-kiel.de (ORCID) Kay Schmuetz kschmuetz@ufg.uni-kiel.de contributors: Thomas Huet thomashuet7@gmail.com (ORCID) [contributor] Nils Mueller-Scheessel nils.mueller-scheessel@ufg.uni-kiel.de (ORCID) [contributor] Joe Roe joe@joeroe.io (ORCID) [contributor] Ben Marwick (ORCID) [reviewer] Enrico R. Crema (ORCID) [reviewer]","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/calibrate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calibrate all valid dates in a c14_date_list — calibrate","title":"Calibrate all valid dates in a c14_date_list — calibrate","text":"Calibrate dates c14_date_list Bchron::BchronCalibrate(). function provides two different kinds output variables added new list columns input c14_date_list: calprobdistr calrange. calrange accompanied sigma. See ?Bchron::BchronCalibrate ?c14bazAAR:::hdr information. calprobdistr: probability distribution individual date ages individual probability >= 1e-06. date data.frame columns calage density. calrange: contiguous ranges cover probability interval requested individual date. date data.frame columns dens .","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/calibrate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calibrate all valid dates in a c14_date_list — calibrate","text":"","code":"calibrate(   x,   choices = c(\"calrange\"),   sigma = 2,   calCurves = rep(\"intcal20\", nrow(x)),   ... )  # S3 method for default calibrate(   x,   choices = c(\"calrange\"),   sigma = 2,   calCurves = rep(\"intcal20\", nrow(x)),   ... )  # S3 method for c14_date_list calibrate(   x,   choices = c(\"calrange\"),   sigma = 2,   calCurves = rep(\"intcal20\", nrow(x)),   ... )"},{"path":"https://docs.ropensci.org/c14bazAAR/reference/calibrate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calibrate all valid dates in a c14_date_list — calibrate","text":"x object class c14_date_list choices whether result include full calibrated probability dataframe ('calprobdistr') sigma range ('calrange'). arguments may given time. sigma desired sigma value (1,2,3) calibrated sigma ranges calCurves vector values containing either intcal20, shcal20, marine20, normal (older calibration curves supposed intcal13). length number ages supplied. See BchronCalibrate information ... passed BchronCalibrate","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/calibrate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calibrate all valid dates in a c14_date_list — calibrate","text":"object class c14_date_list additional columns calprobdistr calrange sigma","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/calibrate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calibrate all valid dates in a c14_date_list — calibrate","text":"","code":"calibrate(   example_c14_date_list,   choices = c(\"calprobdistr\", \"calrange\"),   sigma = 1 ) #> Calibrating dates...  #>    |                                                           |                                                  |   0%   |                                                           |++                                                |   5%   |                                                           |++++++++++++++++++++++++++++++++++++++++++++++++  |  95%   |                                                           |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% #> \tRadiocarbon date list #> \tdates: 9 #> \tsites: 4 #> \tcountries: 5 #> \tuncalBP: 9000 ― 1000  #>  #> # A data frame: 9 × 22 #>   sourcedb method labnr c14age c14std calprobdistr   calrange sigma c13val site  #>   <chr>    <chr>  <chr>  <int>  <int> <list>         <list>   <dbl>  <dbl> <chr> #> 1 A        Conv   lab-1   1000     20 <df [212 × 2]> <df>         1    -15 Site… #> 2 A        Conv   lab-2   2000     30 <df [386 × 2]> <df>         1    -20 Site… #> 3 A        AMS    lab-3   3000     40 <df [490 × 2]> <df>         1    -25 Site… #> 4 B        NA     lab-4   4000     50 <df [694 × 2]> <df>         1    -15 Site… #> 5 B        AMS    lab-5   5000     50 <df [420 × 2]> <df>         1    -20 Site… #> 6 B        AMS    lab-6   6000     60 <df [702 × 2]> <df>         1    -25 Site… #> 7 C        AMS    lab-7   7000     70 <df [586 × 2]> <df>         1    -15 Site… #> 8 C        AMS    lab-8   8000     80 <df [979 × 2]> <df>         1    -20 Site… #> 9 C        AMS    lab-9   9000     90 <df>           <df>         1    -25 Site… #> # ℹ 12 more variables: sitetype <chr>, feature <chr>, period <chr>, #> #   culture <chr>, material <chr>, species <chr>, region <chr>, country <chr>, #> #   lat <dbl>, lon <dbl>, shortref <chr>, comment <chr>"},{"path":"https://docs.ropensci.org/c14bazAAR/reference/country_attribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the country of all dates in a c14_date_list from their coordinates — country_attribution","title":"Determine the country of all dates in a c14_date_list from their coordinates — country_attribution","text":"c14bazAAR::determine_country_by_coordinate() adds column country_coord standardized country attribution based coordinate information dates. Due inconsistencies country column many c14 source databases often necessary rely coordinate position (lat & lon) country attribution information. Unfortunately source databases store coordinates.","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/country_attribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the country of all dates in a c14_date_list from their coordinates — country_attribution","text":"","code":"determine_country_by_coordinate(x, suppress_spatial_warnings = TRUE)  # S3 method for default determine_country_by_coordinate(x, suppress_spatial_warnings = TRUE)  # S3 method for c14_date_list determine_country_by_coordinate(x, suppress_spatial_warnings = TRUE)"},{"path":"https://docs.ropensci.org/c14bazAAR/reference/country_attribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the country of all dates in a c14_date_list from their coordinates — country_attribution","text":"x object class c14_date_list suppress_spatial_warnings suppress spatial data messages warnings","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/country_attribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the country of all dates in a c14_date_list from their coordinates — country_attribution","text":"object class c14_date_list additional column country_coord","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/country_attribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine the country of all dates in a c14_date_list from their coordinates — country_attribution","text":"","code":"library(magrittr) example_c14_date_list %>%   determine_country_by_coordinate() #> Determining country by coordinates...  #> \tRadiocarbon date list #> \tdates: 9 #> \tsites: 4 #> \tcountries: 5 #> \tuncalBP: 9000 ― 1000  #>  #> # A data frame: 9 × 20 #>   sourcedb method labnr c14age c14std c13val site   sitetype     feature period  #>   <chr>    <chr>  <chr>  <int>  <int>  <dbl> <chr>  <chr>        <chr>   <chr>   #> 1 A        Conv   lab-1   1000     20    -15 Site A Burial mound Grave 1 NA      #> 2 A        Conv   lab-2   2000     30    -20 Site A NA           Grave 2 Bronze… #> 3 A        AMS    lab-3   3000     40    -25 Site B settlement   NA      Bronze… #> 4 B        NA     lab-4   4000     50    -15 Site B settlement   House 5 Late N… #> 5 B        AMS    lab-5   5000     50    -20 Site C settlement   NA      NA      #> 6 B        AMS    lab-6   6000     60    -25 Site C settlement   Oven 4  Early … #> 7 C        AMS    lab-7   7000     70    -15 Site D Camp         Hut 2   Mesoli… #> 8 C        AMS    lab-8   8000     80    -20 Site D Camp         Hut 2   Mesoli… #> 9 C        AMS    lab-9   9000     90    -25 Site D Camp         Hut 3   Mesoli… #> # ℹ 10 more variables: culture <chr>, material <chr>, species <chr>, #> #   region <chr>, country <chr>, country_coord <chr>, lat <dbl>, lon <dbl>, #> #   shortref <chr>, comment <chr>"},{"path":"https://docs.ropensci.org/c14bazAAR/reference/db_getter.html","id":null,"dir":"Reference","previous_headings":"","what":"Download radiocarbon source databases and convert them to a c14_date_list — get_c14data","title":"Download radiocarbon source databases and convert them to a c14_date_list — get_c14data","text":"get_c14data() allows download source databases adjust variables conform definition variable_reference table. includes renaming arranging variables (c14bazAAR::order_variables()) well type conversion (c14bazAAR::enforce_types()) -- steps undertaken .c14_date_list().  databases require different downloading data wrangling steps. Therefore custom getter function (see ?get_all_dates). get_c14data() wrapper download dates multiple databases c14bazAAR::fuse() results.","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/db_getter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download radiocarbon source databases and convert them to a c14_date_list — get_c14data","text":"","code":"get_c14data(databases = c())"},{"path":"https://docs.ropensci.org/c14bazAAR/reference/db_getter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download radiocarbon source databases and convert them to a c14_date_list — get_c14data","text":"databases Character vector. Names databases downloaded. \"\" causes download databases. get_c14data() prints list currently available databases","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/db_getter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download radiocarbon source databases and convert them to a c14_date_list — get_c14data","text":"","code":"if (FALSE) {  get_c14data(databases = c(\"adrac\", \"palmisano\"))   get_all_dates()}"},{"path":"https://docs.ropensci.org/c14bazAAR/reference/db_getter_backend.html","id":null,"dir":"Reference","previous_headings":"","what":"Backend functions for data download — get_14cpalaeolithic","title":"Backend functions for data download — get_14cpalaeolithic","text":"Backend functions download data. See ?get_c14data simple interface information.","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/db_getter_backend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Backend functions for data download — get_14cpalaeolithic","text":"","code":"get_14cpalaeolithic(db_url = get_db_url(\"14cpalaeolithic\"))  get_14sea(db_url = get_db_url(\"14sea\"))  get_adrac(db_url = get_db_url(\"adrac\"))  get_agrichange(db_url = get_db_url(\"agrichange\"))  get_aida(db_url = get_db_url(\"aida\"))  get_austarch(db_url = get_db_url(\"austarch\"))  get_bda(db_url = get_db_url(\"bda\"))  get_all_dates()  get_calpal(db_url = get_db_url(\"calpal\"))  get_caribbean(db_url = get_db_url(\"caribbean\"))  get_eubar(db_url = get_db_url(\"eubar\"))  get_euroevol(db_url = get_db_url(\"euroevol\"))  get_irdd(db_url = get_db_url(\"irdd\"))  get_jomon(db_url = get_db_url(\"jomon\"))  get_katsianis(db_url = get_db_url(\"katsianis\"))  get_kiteeastafrica(db_url = get_db_url(\"kiteeastafrica\"))  get_medafricarbon(db_url = get_db_url(\"medafricarbon\"))  get_mesorad(db_url = get_db_url(\"mesorad\"))  get_neonet(db_url = get_db_url(\"neonet\"))  get_neonetatl(db_url = get_db_url(\"neonetatl\"))  get_nerd(db_url = get_db_url(\"nerd\"))  get_p3k14c(db_url = get_db_url(\"p3k14c\"))  get_pacea(db_url = get_db_url(\"pacea\"))  get_palmisano(db_url = get_db_url(\"palmisano\"))  get_radon(db_url = get_db_url(\"radon\"))  get_radonb(db_url = get_db_url(\"radonb\"))  get_rxpand(db_url = get_db_url(\"rxpand\"))  get_sard(db_url = get_db_url(\"sard\"))"},{"path":"https://docs.ropensci.org/c14bazAAR/reference/db_getter_backend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Backend functions for data download — get_14cpalaeolithic","text":"db_url Character. URL points c14 archive file. c14bazAAR::get_db_url() fetches URL reference list","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/db_info_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Database lookup table — db_info_table","title":"Database lookup table — db_info_table","text":"Lookup table general source database information.","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/db_info_table.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Database lookup table — db_info_table","text":"data.frame. Columns: db: database name version: database version url_num: url number (databases spread multiple files) url: file url database can downloaded","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/deprecated_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions — deprecated_functions","title":"Deprecated functions — deprecated_functions","text":"Run anyway get information replacements removed.","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/deprecated_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions — deprecated_functions","text":"","code":"mark_duplicates(...)  coordinate_precision(...)  finalize_country_name(...)  standardize_country_name(...)  get_emedyd(...)  fix_database_country_name(...)  classify_material(...)  get_context(...)"},{"path":"https://docs.ropensci.org/c14bazAAR/reference/deprecated_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated functions — deprecated_functions","text":"... ...","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/duplicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove duplicates in a c14_date_list — duplicates","title":"Remove duplicates in a c14_date_list — duplicates","text":"Duplicates found comparison labnrs. dates exactly equal labnrs considered duplicates. Duplicate groups numbered (0) numbers linked individual dates internal column duplicate_group. want see grouping without removing anything use mark_only flag. c14bazAAR::remove_duplicates() can remove duplicates three different strategies according value arguments preferences supermerge: Option 1: merging dates duplicate_group. non-equal variables   duplicate group turned NA. default option. Option 2: selecting individual database entries duplicate_group   according trust hierarchy defined parameter preferences.   case duplicates within one database first occurrence table (top )   selected. databases mentioned preferences dropped. Option 3: Like option 2, case different datasets   duplicate_group merged column column   create superdataset maximum information. column sourcedb   dropped case indicate multiple databases merged. Data   citation lot difficult option. can activated supermerge. option log allows add new column duplicate_remove_log documents variety values provided databases duplicated date.","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/duplicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove duplicates in a c14_date_list — duplicates","text":"","code":"remove_duplicates(   x,   preferences = NULL,   supermerge = FALSE,   log = TRUE,   mark_only = FALSE )  # S3 method for default remove_duplicates(   x,   preferences = NULL,   supermerge = FALSE,   log = TRUE,   mark_only = FALSE )  # S3 method for c14_date_list remove_duplicates(   x,   preferences = NULL,   supermerge = FALSE,   log = TRUE,   mark_only = FALSE )"},{"path":"https://docs.ropensci.org/c14bazAAR/reference/duplicates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove duplicates in a c14_date_list — duplicates","text":"x object class c14_date_list preferences character vector order source databases deduping executed. e.g. preferences = c(\"radon\", \"calpal\") certain date appears radon euroevol, radon entry remains. Default: NULL. preferences = NULL overlapping, conflicting information individual columns one duplicated date removed. See Option 2 3. supermerge boolean. duplicated datasets merged column level? Default: FALSE. See Option 3. log logical. log = TRUE, additional column added contains string documentation variants information one date conflicting databases. Default = TRUE. mark_only boolean. duplicates removed, indicated? Default: FALSE.","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/duplicates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove duplicates in a c14_date_list — duplicates","text":"object class c14_date_list additional columns duplicate_group duplicate_remove_log","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/duplicates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove duplicates in a c14_date_list — duplicates","text":"","code":"library(magrittr)  test_data <- tibble::tribble(   ~sourcedb, ~labnr,  ~c14age, ~c14std,  \"A\",       \"lab-1\", 1100,    10,  \"A\",       \"lab-1\", 2100,    20,  \"B\",       \"lab-1\", 3100,    30,  \"A\",       \"lab-2\", NA,      10,  \"B\",       \"lab-2\", 2200,    20,  \"C\",       \"lab-3\", 1300,    10 ) %>% as.c14_date_list()  # remove duplicates with option 1: test_data %>% remove_duplicates() #> You did not provide the argument 'preferences' or your c14_date_list does not contain the necessary column 'sourcedb'. That means that duplicates are removed in a way that obscures conflicting information. As a result of this vital data for your analysis might get lost.  #> Please check '?duplicates' for more information. #> Marking duplicates...  #> -> Search for accordances in Lab Codes... #> -> Writing duplicate groups... #>    |                                                           |                                                  |   0%   |                                                           |+++++++++++++++++++++++++                         |  50%   |                                                           |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% #> Removing duplicates...  #> \tRadiocarbon date list #> \tdates: 3 #> \tuncalBP: 2200 ― 1300  #>  #> # A data frame: 3 × 5 #>   sourcedb labnr c14age c14std duplicate_remove_log                              #>   <chr>    <chr>  <int>  <int> <chr>                                             #> 1 C        lab-3   1300     10 NA                                                #> 2 NA       lab-1     NA     NA sourcedb: A|B, labnr: lab-1, c14age: 1100|2100|3… #> 3 NA       lab-2   2200     NA sourcedb: A|B, labnr: lab-2, c14age: NA|2200, c1…  # remove duplicates with option 2: test_data %>% remove_duplicates(   preferences = c(\"A\", \"B\") ) #> Marking duplicates...  #> -> Search for accordances in Lab Codes... #> -> Writing duplicate groups... #>    |                                                           |                                                  |   0%   |                                                           |+++++++++++++++++++++++++                         |  50%   |                                                           |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% #> Removing duplicates...  #> \tRadiocarbon date list #> \tdates: 2 #> \tuncalBP: 1100 ― 1100  #>  #> # A data frame: 2 × 5 #>   sourcedb labnr c14age c14std duplicate_remove_log                              #>   <chr>    <chr>  <int>  <int> <chr>                                             #> 1 A        lab-1   1100     10 sourcedb: A|B, labnr: lab-1, c14age: 1100|2100|3… #> 2 A        lab-2     NA     10 sourcedb: A|B, labnr: lab-2, c14age: NA|2200, c1…  # remove duplicates with option 3: test_data %>% remove_duplicates(   preferences = c(\"A\", \"B\"),   supermerge = TRUE ) #> Marking duplicates...  #> -> Search for accordances in Lab Codes... #> -> Writing duplicate groups... #>    |                                                           |                                                  |   0%   |                                                           |+++++++++++++++++++++++++                         |  50%   |                                                           |++++++++++++++++++++++++++++++++++++++++++++++++++| 100% #> Removing duplicates...  #> \tRadiocarbon date list #> \tdates: 2 #> \tuncalBP: 2200 ― 1100  #>  #> # A data frame: 2 × 4 #>   labnr c14age c14std duplicate_remove_log                                       #>   <chr>  <int>  <int> <chr>                                                      #> 1 lab-1   1100     10 sourcedb: A|B, labnr: lab-1, c14age: 1100|2100|3100, c14s… #> 2 lab-2   2200     10 sourcedb: A|B, labnr: lab-2, c14age: NA|2200, c14std: 10|…"},{"path":"https://docs.ropensci.org/c14bazAAR/reference/enforce_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Enforce variable types in a c14_date_list — enforce_types","title":"Enforce variable types in a c14_date_list — enforce_types","text":"Enforce variable types c14_date_list remove everything fit (e.g. text number field). See variable_reference table documentation variable types. enforce_types() called c14bazAAR::.c14_date_list().","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/enforce_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enforce variable types in a c14_date_list — enforce_types","text":"","code":"enforce_types(x, suppress_na_introduced_warnings = TRUE)  # S3 method for default enforce_types(x, suppress_na_introduced_warnings = TRUE)  # S3 method for c14_date_list enforce_types(x, suppress_na_introduced_warnings = TRUE)"},{"path":"https://docs.ropensci.org/c14bazAAR/reference/enforce_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enforce variable types in a c14_date_list — enforce_types","text":"x object class c14_date_list suppress_na_introduced_warnings suppress warnings caused data removal type transformation due wrong database entries (text number column)","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/enforce_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enforce variable types in a c14_date_list — enforce_types","text":"object class c14_date_list","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/enforce_types.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enforce variable types in a c14_date_list — enforce_types","text":"","code":"# initial situation ex <- example_c14_date_list class(ex$c14age) #> [1] \"integer\"  # modify variable/column type ex$c14age <- as.character(ex$c14age) class(ex$c14age) #> [1] \"character\"  # fix type with enforce_types() ex <- enforce_types(ex) class(ex$c14age) #> [1] \"integer\""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/example_c14_date_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Example c14_date_list — example_c14_date_list","title":"Example c14_date_list — example_c14_date_list","text":"c14_date_list tests example code.","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/example_c14_date_list.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example c14_date_list — example_c14_date_list","text":"c14_date_list. See data_raw/variable_definition.csv explanation variable meaning.","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/fuse.html","id":null,"dir":"Reference","previous_headings":"","what":"Fuse multiple c14_date_lists — fuse","title":"Fuse multiple c14_date_lists — fuse","text":"function combines c14_date_lists dplyr::bind_rows().  joining operation therefore might introduce duplicates. See c14bazAAR::mark_duplicates() c14bazAAR::remove_duplicates() way find remove .","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/fuse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fuse multiple c14_date_lists — fuse","text":"","code":"fuse(...)  # S3 method for default fuse(...)  # S3 method for c14_date_list fuse(...)"},{"path":"https://docs.ropensci.org/c14bazAAR/reference/fuse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fuse multiple c14_date_lists — fuse","text":"... objects class c14_date_list","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/fuse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fuse multiple c14_date_lists — fuse","text":"object class c14_date_list","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/fuse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fuse multiple c14_date_lists — fuse","text":"","code":"# fuse three identical example c14_date_lists fuse(example_c14_date_list, example_c14_date_list, example_c14_date_list) #> \tRadiocarbon date list #> \tdates: 27 #> \tsites: 4 #> \tcountries: 5 #> \tuncalBP: 9000 ― 1000  #>  #> # A data frame: 27 × 19 #>    sourcedb method labnr c14age c14std c13val site   sitetype     feature period #>    <chr>    <chr>  <chr>  <int>  <int>  <dbl> <chr>  <chr>        <chr>   <chr>  #>  1 A        Conv   lab-1   1000     20    -15 Site A Burial mound Grave 1 NA     #>  2 A        Conv   lab-2   2000     30    -20 Site A NA           Grave 2 Bronz… #>  3 A        AMS    lab-3   3000     40    -25 Site B settlement   NA      Bronz… #>  4 B        NA     lab-4   4000     50    -15 Site B settlement   House 5 Late … #>  5 B        AMS    lab-5   5000     50    -20 Site C settlement   NA      NA     #>  6 B        AMS    lab-6   6000     60    -25 Site C settlement   Oven 4  Early… #>  7 C        AMS    lab-7   7000     70    -15 Site D Camp         Hut 2   Mesol… #>  8 C        AMS    lab-8   8000     80    -20 Site D Camp         Hut 2   Mesol… #>  9 C        AMS    lab-9   9000     90    -25 Site D Camp         Hut 3   Mesol… #> 10 A        Conv   lab-1   1000     20    -15 Site A Burial mound Grave 1 NA     #> # ℹ 17 more rows #> # ℹ 9 more variables: culture <chr>, material <chr>, species <chr>, #> #   region <chr>, country <chr>, lat <dbl>, lon <dbl>, shortref <chr>, #> #   comment <chr>"},{"path":"https://docs.ropensci.org/c14bazAAR/reference/get_db_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information for c14 databases — get_db_url","title":"Get information for c14 databases — get_db_url","text":"Looks information c14 source databases db_info_table.","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/get_db_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information for c14 databases — get_db_url","text":"","code":"get_db_url(..., db_info_table = c14bazAAR::db_info_table)  get_db_version(..., db_info_table = c14bazAAR::db_info_table)"},{"path":"https://docs.ropensci.org/c14bazAAR/reference/get_db_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information for c14 databases — get_db_url","text":"... names databases db_info_table db info reference table","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/order_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Order the variables in a c14_date_list — order_variables","title":"Order the variables in a c14_date_list — order_variables","text":"Arrange variables according defined order. makes sure c14_date_list always appears outline.  c14_date_list least columns c14age c14std. Beyond selection additional variables depending input source databases, result c14bazAAR functions added data analysis steps. function arranges expected variables distinct, predefined order. Undefined variables added end.","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/order_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order the variables in a c14_date_list — order_variables","text":"","code":"order_variables(x)  # S3 method for default order_variables(x)  # S3 method for c14_date_list order_variables(x)"},{"path":"https://docs.ropensci.org/c14bazAAR/reference/order_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order the variables in a c14_date_list — order_variables","text":"x object class c14_date_list","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/order_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Order the variables in a c14_date_list — order_variables","text":"object class c14_date_list","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/write_c14.html","id":null,"dir":"Reference","previous_headings":"","what":"write c14_date_lists to files — write_c14","title":"write c14_date_lists to files — write_c14","text":"write c14_date_lists files","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/write_c14.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write c14_date_lists to files — write_c14","text":"","code":"write_c14(x, format = c(\"csv\"), ...)  # S3 method for default write_c14(x, format = c(\"csv\"), ...)  # S3 method for c14_date_list write_c14(x, format = c(\"csv\"), ...)"},{"path":"https://docs.ropensci.org/c14bazAAR/reference/write_c14.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write c14_date_lists to files — write_c14","text":"x object class c14_date_list format output format: 'csv' (default) 'xlsx'. 'csv' calls utils::write.csv(), 'xlsx' calls writexl::write_xlsx() ... passed actual writing functions","code":""},{"path":"https://docs.ropensci.org/c14bazAAR/reference/write_c14.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"write c14_date_lists to files — write_c14","text":"","code":"csv_file <- tempfile(fileext = \".csv\") write_c14(   example_c14_date_list,   format = \"csv\",   file = csv_file ) # \\donttest{ xlsx_file <- tempfile(fileext = \".xlsx\") write_c14(   example_c14_date_list,   format = \"xlsx\",   path = xlsx_file, ) # }"}]
